#import("stdlib.ab")

extern:"c" fun printf(fmt: string): int

fun hello(a: int): int {
    printf("abc")
    a + 5
}

fun hello2(a: int): int {
    printf("abc 2")
    a + 10
}

compiler fun modifyFunctions(a: int) {
    if (a == 1) {
        compilerContext.find("hello").block = compilerContext.find("hello2").block
    }

    compilerContext.modify("hello2") {
        printf("AAAAAAAAAAA")
        a + 20
    }
}

compiler fun test() {
    printf(compilerContext.name)
    compilerContext.rename("abc")
    compilerContext.setBody {
        fun hi {
            printf("Teeeest")
        }
        hi()
        printf("Hello abc")
    }
}

compiler fun bananas {
    printf(compilerContext.name)
}

class View {
    abstract fun renderView(): int = 5

    compiler fun render(fn: () -> void) {
        compilerContext.modify("renderView", fn)
    }

    #render {
        5
    }

    compiler fun defineNewMethods() {
        compilerContext.defineInClass {
            compiler fun hi():int = 1
        }
    }

    #defineNewMethods()
}

fun main(): int {
    #hello(5)
    #modifyFunctions(1)
    #hello(5)

    #test()
    #abc(2)
    #bananas()

    hello2(1)
    hello(5)
    #View().hi()
}
